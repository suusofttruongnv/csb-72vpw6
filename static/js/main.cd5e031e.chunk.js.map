{"version":3,"sources":["ErrorMessage.js","SuccessMessage.js","VerifyMessage.js","SignatureMessage.js","App.js","index.js"],"names":["ErrorMessage","message","className","xmlns","fill","viewBox","d","SuccessMessage","verifyMessage","a","address","signature","ethers","utils","console","log","VerifyMessage","useState","error","setError","successMsg","setSuccessMsg","handleVerification","e","preventDefault","data","FormData","target","get","onSubmit","required","type","name","placeholder","signMessage","window","ethereum","Error","send","provider","providers","Web3Provider","signer","getSigner","getAddress","account","hash","request","method","params","then","res","SignatureMessage","resultBox","useRef","signatures","setSignatures","handleSign","sig","map","idx","readOnly","ref","value","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cd5e031e.chunk.js","sourcesContent":["export default function ErrorMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-error\">\n      <div className=\"flex-1\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          className=\"w-6 h-6 mx-2 stroke-current\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n          ></path>\n        </svg>\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","export default function SuccessMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-success\">\n      <div className=\"flex-1\">\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport { ethers } from \"ethers\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport SuccessMessage from \"./SuccessMessage\";\n\nconst verifyMessage = async ({ message, address, signature }) => {\n  try {\n    const signerAddr = await ethers.utils.verifyMessage(message, signature);\n    if (signerAddr !== address) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    console.log(err);\n    return false;\n  }\n};\n\nexport default function VerifyMessage() {\n  const [error, setError] = useState();\n  const [successMsg, setSuccessMsg] = useState();\n\n  const handleVerification = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    setSuccessMsg();\n    setError();\n    const isValid = await verifyMessage({\n      setError,\n      message: data.get(\"message\"),\n      address: data.get(\"address\"),\n      signature: data.get(\"signature\")\n    });\n\n    if (isValid) {\n      setSuccessMsg(\"Signature is valid!\");\n    } else {\n      setError(\"Invalid signature\");\n    }\n  };\n\n  return (\n    <form className=\"m-4\" onSubmit={handleVerification}>\n      <div className=\"credit-card w-full shadow-lg mx-auto rounded-xl bg-white\">\n        <main className=\"mt-4 p-4\">\n          <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n            Verify signature\n          </h1>\n          <div className=\"\">\n            <div className=\"my-3\">\n              <textarea\n                required\n                type=\"text\"\n                name=\"message\"\n                className=\"textarea w-full h-24 textarea-bordered focus:ring focus:outline-none\"\n                placeholder=\"Message\"\n              />\n            </div>\n            <div className=\"my-3\">\n              <textarea\n                required\n                type=\"text\"\n                name=\"signature\"\n                className=\"textarea w-full h-24 textarea-bordered focus:ring focus:outline-none\"\n                placeholder=\"Signature\"\n              />\n            </div>\n            <div className=\"my-3\">\n              <input\n                required\n                type=\"text\"\n                name=\"address\"\n                className=\"textarea w-full input input-bordered focus:ring focus:outline-none\"\n                placeholder=\"Signer address\"\n              />\n            </div>\n          </div>\n        </main>\n        <footer className=\"p-4\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n          >\n            Verify signature\n          </button>\n        </footer>\n        <div className=\"p-4 mt-4\">\n          <ErrorMessage message={error} />\n          <SuccessMessage message={successMsg} />\n        </div>\n      </div>\n    </form>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport { ethers } from \"ethers\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst signMessage = async ({ setError, message }) => {\n  try {\n    console.log({ message });\n    if (!window.ethereum)\n      throw new Error(\"No crypto wallet found. Please install it.\");\n\n    await window.ethereum.send(\"eth_requestAccounts\");\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n\n    const signature = await signer.signMessage(message);\n    const address = await signer.getAddress();\n\n    let account = address;\n    let hash = message;\n    window.ethereum\n      .request({ method: \"personal_sign\", params: [account, hash] })\n      .then((res) => {\n        console.log(\"res\", res);\n      });\n\n    return {\n      message,\n      signature,\n      address\n    };\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nexport default function SignatureMessage() {\n  const resultBox = useRef();\n  const [signatures, setSignatures] = useState([]);\n  const [error, setError] = useState();\n\n  const handleSign = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    setError();\n    const sig = await signMessage({\n      setError,\n      message: data.get(\"message\")\n    });\n    if (sig) {\n      setSignatures([...signatures, sig]);\n    }\n  };\n\n  return (\n    <form className=\"m-4\" onSubmit={handleSign}>\n      <div className=\"credit-card w-full shadow-lg mx-auto rounded-xl bg-white\">\n        <main className=\"mt-4 p-4\">\n          <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n            Sign messages\n          </h1>\n          <div className=\"\">\n            <div className=\"my-3\">\n              <textarea\n                required\n                type=\"text\"\n                name=\"message\"\n                className=\"textarea w-full h-24 textarea-bordered focus:ring focus:outline-none\"\n                placeholder=\"Message\"\n              />\n            </div>\n          </div>\n        </main>\n        <footer className=\"p-4\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n          >\n            Sign message\n          </button>\n          <ErrorMessage message={error} />\n        </footer>\n        {signatures.map((sig, idx) => {\n          return (\n            <div className=\"p-2\" key={sig}>\n              <div className=\"my-3\">\n                <p>\n                  Message {idx + 1}: {sig.message}\n                </p>\n                <p>Signer: {sig.address}</p>\n                <textarea\n                  type=\"text\"\n                  readOnly\n                  ref={resultBox}\n                  className=\"textarea w-full h-24 textarea-bordered focus:ring focus:outline-none\"\n                  placeholder=\"Generated signature\"\n                  value={sig.signature}\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n}\n","import SignMessage from \"./SignMessage\";\nimport VerifyMessage from \"./VerifyMessage\";\nimport SignatureMessage from \"./SignatureMessage\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap\">\n      <div className=\"w-full lg:w-1/2\">\n        <SignatureMessage />\n      </div>\n      <div className=\"w-full lg:w-1/2\">\n        <VerifyMessage />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}